// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tour_Packages.Context;

#nullable disable

namespace Tour_Packages.Migrations
{
    [DbContext(typeof(PackageContext))]
    partial class PackageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tour_Packages.Models.Itinerary", b =>
                {
                    b.Property<int>("ItineraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItineraryId"));

                    b.Property<string>("ItineraryDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TourPackagePackageId")
                        .HasColumnType("int");

                    b.HasKey("ItineraryId");

                    b.HasIndex("TourPackagePackageId");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("Tour_Packages.Models.Spot", b =>
                {
                    b.Property<int>("SpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpotId"));

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TourPackagePackageId")
                        .HasColumnType("int");

                    b.HasKey("SpotId");

                    b.HasIndex("TourPackagePackageId");

                    b.ToTable("Spots");
                });

            modelBuilder.Entity("Tour_Packages.Models.TourPackages", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("VacationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.ToTable("TourPackages");
                });

            modelBuilder.Entity("Tour_Packages.Models.Itinerary", b =>
                {
                    b.HasOne("Tour_Packages.Models.TourPackages", "TourPackage")
                        .WithMany("Itinerary")
                        .HasForeignKey("TourPackagePackageId");

                    b.Navigation("TourPackage");
                });

            modelBuilder.Entity("Tour_Packages.Models.Spot", b =>
                {
                    b.HasOne("Tour_Packages.Models.TourPackages", "TourPackage")
                        .WithMany("spot")
                        .HasForeignKey("TourPackagePackageId");

                    b.Navigation("TourPackage");
                });

            modelBuilder.Entity("Tour_Packages.Models.TourPackages", b =>
                {
                    b.Navigation("Itinerary");

                    b.Navigation("spot");
                });
#pragma warning restore 612, 618
        }
    }
}
